1)concrete goals for your project, and methods of testing and verification you will apply to determine whether those goals were met 
	The goal for our project is to implement a webpage with a chat box on all of our instances. We will test this by visiting our webpage hosted by the instance using apache to see if the chatbox is functional for users. Further, since this is a chatbox for our classmates, we will insure that all peers are able to log in and use the chat box. Users will first be prompted by a log in screen that requires they have a username and password with our server. If they have these requirements, they will be able to continue on to a chat box. If all of our classmates are able to log in with their credentials and chat with one another with their username displayed in the chat box, our goal will have been met.  

2)a discussion of your project's effect on its user population, and the user support issues it might raise 
	The project would allow all puppet agents to host their own website based chat box which our classmates can use to talk to eachother. Our target population are our peers in cis399. We want them to be able to visit a webpage hosted by one of our instances and communicate with eachother. Support issues should be minimal as puppet will apply the same configuration to all agents. The only real issue should stem from the implementation of the chat box via a .html file, such as ensuring all users are able to talk to eachother, usernames show up, and all users are able to log in to the chat. If that is done correctly user issues should be minimal to non-existant. The only other conceivable support issue would be adding or removing users allowed to use the chat. 
	
3)a discussion of security issues relevant to your project 
	Security issues should be minimal since we are merely hosting a web chat service. No private data should be being stored. However, we will make efforts to ensure the page is as safe and secure as possible. To do this we will hide Apache version and OS identity from errors, disable directory listing, run Apache as separate user and group...etc. These small tweaks will help protect our site, and servers from possible harm.  

4)a discussion of the work needed to complete the project and what might be needed to maintain it for continued future use, and ways that installation and maintenance tasks can be automated
	To complete this project we will need to implement several html files under the Apache module. These files will include a login screen, a basic webpage, a file for the chat box, and a css file. Installation of the module on the agents will be fully automated, so maintainance for future use should be minimal. The only maintainance required should be fixing one of the pages should they stop working or adding new users and removing undesirable users. 


5)documentation of the project, both for the system administration work involved and for your user community 
	Documentation for a project like this should be minimal. Users will intuitively know how to use a chat box. The only real documentation for a sysadmin would entail how to add or remove a user, or potentially tweak the chat box if they so desire. Documentation for how the chat box was implemented will be provided in the unlikely case it ever stops working. Users may need documentation on how to use their login and password, but once they have that information they shouldn't require additional assistance.  
