1)concrete goals for your project, and methods of testing and verification you will apply to determine whether those goals were met 
	The goal for our project is to implement an XMPP server on two of our instances so our class can chat and send messages to one another using XMPP clients. We will test this by downloading XMPP clients and trying to chat with eachother, test users, and any of our class mates that want to try and log in. Further, since this is a XMPP server for our classmates only , we will insure that all peers that wish to try and connect are able to log in and use the server. If both of us can log in to accounts on both instances, chat with one another as well as test accounts, and any class mate that wants to try it out is able to chat as well, then we will have been successful in our project.  

2)a discussion of your project's effect on its user population, and the user support issues it might raise 
	The project would allow all puppet agents to host their own online XMPP server where our classmates can use to talk to eachother. Our target population are ourselves and interested classmates. We want them to be able to download an XMPP client and log onto the server  hosted by one of our instances and communicate with eachother. Support issues should be minimal as puppet will apply the same configuration to all agents, and much of ejabbered comes preconfigured. Our main issue will be adding and removing users and changing passwords and usernames. Another issue would be ensuring the users download and configure the XMPP client correctly. Also, we need to ensure that the users obtain the correct username and password for logging in and keeping that information safe. 
	
3)a discussion of security issues relevant to your project 
	Security issues should be very minimal. ejabberd is already written to be as safe as possible. However, we do have to open up ports on our instance to get it to work. Ensuring we only open neccessary ports will be important in keeping our instance safe. The usernames and passwords will be held on the server in our ejabberd.cfg files. This should keep them safe from html/web based attacks. Since almost everything is happening on the instance itself in the predefined environment provided by ejabberd, there doesn't seem to be much additional procautions we'll have to take to make it safer. 

4)a discussion of the work needed to complete the project and what might be needed to maintain it for continued future use, and ways that installation and maintenance tasks can be automated
	In order to complete this project, we would need to create an ejabberd module that creates the XMPP server through the ejabberd.cfg file. We would then have to set up security groups on our instances so that the servers can be run on our instances.Some maintenance for future use would be adding new users to the server and making sure their information is as safe and secure as the old users' info.  Installation of the module on the agents will be fully automated, so maintenance should focus on users and their security and whether or not they can log in. Another field of maintainance required should be fixing one of the servers should they stop working or adding new users and removing undesirable users. 


5)documentation of the project, both for the system administration work involved and for your user community 
	Documentation for this project shouldn't be too bad. Users will need documentation on how to get an XMPP client, and how to know which clients will work with our server. They will also need instruction on how to connect to the server using the client. A lot of this documentation exists on the clients websites, but we will provide additional documentation so users know exactly the information they need to put where to connect. The only real documentation for a sysadmin would entail how to add or remove a user, or potentially tweak the server if they so desire. Documentation for how the XMPP server was implemented will be provided in the unlikely case it ever stops working. Users may need documentation on how to use their login and password, but once they have that information they shouldn't require additional assistance.  
